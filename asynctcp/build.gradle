buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'java-library'
    id 'java-library-distribution'
    id 'maven'
    id 'maven-publish'
    id 'java-test-fixtures'
    id "com.jfrog.bintray" version "1.8.4"
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id "vontikov.sbe-generator-plugin" version "0.0.3"
}

sbeGenerator {
    src {

        dir = 'src/main/resources/dev/squaremile/asynctcp/sbe'
        includes = []
        excludes = []
    }

    javaCodecsDir = 'src/main/java'
}

java {
    modularity.inferModulePath = true
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

dependencies {
    api 'org.agrona:agrona:1.8.0'
    testFixturesImplementation 'org.agrona:agrona:1.8.0'
    testFixturesImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
    testFixturesImplementation 'org.assertj:assertj-core:3.16.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
    testImplementation 'org.assertj:assertj-core:3.16.1'
}

shadowJar {
    classifier null
    dependencies {
        exclude(dependency('org.agrona:agrona:.*'))
    }
    manifest {
        attributes('Automatic-Module-Name': 'dev.squaremile.asynctcp')
    }
}

distributions {
    main {
        distributionBaseName = 'asynctcp'
    }
}

repositories {
    jcenter()
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            artifact shadowJar
            artifact sourcesJar
            artifact javadocJar
            pom {
                withXml {
                    def dependencies = asNode().appendNode('dependencies')
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', 'org.agrona')
                    dependency.appendNode('artifactId', 'agrona')
                    dependency.appendNode('version', '1.8.0')
                    dependency.appendNode('scope', 'provided')
                }

                name = 'asynctcp'
                packaging = 'jar'
                description = 'Async TCP'

                url = 'https://github.com/squaremiledev/asynctransport'

                scm {
                    connection = 'scm:git:https://github.com/squaremiledev/asynctransport.git'
                    developerConnection = 'scm:git:https://github.com/squaremiledev/asynctransport.git'
                    url = 'https://github.com/squaremiledev/asynctransport.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'michaelszymczak.com'
                        name = 'Michael Szymczak'
                        email = 'contact@michaelszymczak.com'
                        url = 'https://github.com/michaelszymczak'
                    }
                }
            }
        }
    }

}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['MyPublication']
    pkg {
        repo = 'generic'
        name = 'dev.squaremile.asynctcp'
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/squaremiledev/asynctransport.git'
        version {
            name = project.version
            desc = 'Async TCP'
            vcsTag = project.version
        }
    }
}
